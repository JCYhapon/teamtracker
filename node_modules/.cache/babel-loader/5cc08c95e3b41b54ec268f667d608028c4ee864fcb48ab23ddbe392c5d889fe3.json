{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{addTeamMember,assignTask,completeTask,deactivateTeamMember,releasePayment,getTeamMembers,// withdrawBalance,\ncontractTeamManagement}from\"./util/interact.js\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ContractTeamManagement=()=>{const[connectedAddress,setConnectedAddress]=useState(null);const[walletAddress,setWalletAddress]=useState(\"\");const[name,setName]=useState(\"\");const[taskDescription,setTaskDescription]=useState(\"\");const[amount,setAmount]=useState(\"\");const[teamMembers,setTeamMembers]=useState([]);const[notification,setNotification]=useState(null);const[teamMemberAddress,setTeamMemberAddress]=useState(\"\");// Function to handle adding a team member\nconst handleAddTeamMember=async e=>{e.preventDefault();try{await addTeamMember(walletAddress,name);setNotification(\"Team member added successfully\");}catch(error){if(error.message.includes(\"already a member\")){setNotification(\"Address is already a member\");}else{setNotification(\"Team member unsuccesfully added\");}}};// Function to handle assigning a task\nconst handleAssignTask=async e=>{e.preventDefault();if(!teamMemberAddress||!taskDescription){setNotification(\"Please enter both the team member address and task description.\");return;}const success=await assignTask(teamMemberAddress,taskDescription);if(success){setNotification(\"Task assigned successfully\");}else{setNotification(\"Failed to assign task. Please try again.\");}};// Function to handle completing a task\nconst handleCompleteTask=async e=>{e.preventDefault();if(!teamMemberAddress){setNotification(\"Please enter the team member address.\");return;}const success=await completeTask(teamMemberAddress);if(success){setNotification(\"Task completed successfully\");}else{setNotification(\"Failed to complete task. Please try again.\");}};// Function to handle deactivating a team member\nconst handleDeactivateTeamMember=async e=>{e.preventDefault();try{await deactivateTeamMember(teamMemberAddress);setNotification(\"Team member deactivated successfully\");// Update the team members list after deactivation\nfetchTeamMember();}catch(error){console.error(\"Error deactivating team member:\",error);setNotification(\"Error deactivating team member\");}};// Function to handle releasing payment\nconst handleReleasePayment=async e=>{e.preventDefault();if(!teamMemberAddress||!amount){setNotification(\"Please enter both team member address and amount.\");return;}const success=await releasePayment(teamMemberAddress,amount);if(success){setNotification(\"Payment released successfully\");}else{setNotification(\"Failed to release payment. Please try again.\");}};// Function to fetch team members\nconst fetchTeamMember=async walletAddress=>{try{const teamMember=await contractTeamManagement.methods.teamMembers(walletAddress).call();setTeamMembers(prevMembers=>[...prevMembers,teamMember]);}catch(error){console.error(\"Error fetching team member: \".concat(error));}};// Fetch team members when component mounts\nuseEffect(()=>{if(connectedAddress){fetchTeamMember(connectedAddress);}},[connectedAddress]);// Connecting to MetaMask\nconst connectToMetaMask=async()=>{if(typeof window.ethereum!==\"undefined\"){try{const accounts=await window.ethereum.request({method:\"eth_requestAccounts\"});console.log(\"Connected to MetaMask:\",accounts[0]);setConnectedAddress(accounts[0]);}catch(error){console.error(\"Error connecting to MetaMask:\",error);}}else{console.error(\"MetaMask not detected\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"team-management-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Team Management Application\"}),notification&&/*#__PURE__*/_jsx(\"p\",{children:notification}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"column\",children:/*#__PURE__*/_jsx(\"button\",{className:\"connect-metamask\",onClick:connectToMetaMask,children:\"Connect to MetaMask\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"column\",children:connectedAddress&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Connected Address: \",connectedAddress]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"column\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Team Members\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Address\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Total Tasks Assigned\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Total Tasks Completed\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Active\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:teamMembers.map((member,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:member.walletAddress}),/*#__PURE__*/_jsx(\"td\",{children:member.name}),/*#__PURE__*/_jsx(\"td\",{children:member.totalTasksAssigned}),/*#__PURE__*/_jsx(\"td\",{children:member.totalTasksCompleted}),/*#__PURE__*/_jsx(\"td\",{children:member.isActive?\"ðŸŸ¢\":\"ðŸ”´\"})]},index))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"column\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Add Team Member\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleAddTeamMember,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Wallet Address:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"walletAddress\",value:walletAddress,onChange:e=>setWalletAddress(e.target.value)})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Name:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",value:name,onChange:e=>setName(e.target.value)})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Add Team Member\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"column\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Assign Task\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleAssignTask,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Team Member Address:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:teamMemberAddress,onChange:e=>setTeamMemberAddress(e.target.value)})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Task Description:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:taskDescription,onChange:e=>setTaskDescription(e.target.value)})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Assign Task\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"column\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Complete Task\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleCompleteTask,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Team Member Address:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:teamMemberAddress,onChange:e=>setTeamMemberAddress(e.target.value)})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Complete Task\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"column\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Deactivate Team Member\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleDeactivateTeamMember,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Team Member Address:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"teamMember\",value:teamMemberAddress,onChange:e=>setTeamMemberAddress(e.target.value)})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Deactivate Team Member\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"column\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Release Payment\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleReleasePayment,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Team Member Address:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:teamMemberAddress,onChange:e=>setTeamMemberAddress(e.target.value)})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Amount:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:amount,onChange:e=>setAmount(e.target.value)})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Release Payment\"})]})]})]})]});};export default ContractTeamManagement;","map":{"version":3,"names":["React","useState","useEffect","addTeamMember","assignTask","completeTask","deactivateTeamMember","releasePayment","getTeamMembers","contractTeamManagement","jsx","_jsx","jsxs","_jsxs","ContractTeamManagement","connectedAddress","setConnectedAddress","walletAddress","setWalletAddress","name","setName","taskDescription","setTaskDescription","amount","setAmount","teamMembers","setTeamMembers","notification","setNotification","teamMemberAddress","setTeamMemberAddress","handleAddTeamMember","e","preventDefault","error","message","includes","handleAssignTask","success","handleCompleteTask","handleDeactivateTeamMember","fetchTeamMember","console","handleReleasePayment","teamMember","methods","call","prevMembers","concat","connectToMetaMask","window","ethereum","accounts","request","method","log","className","children","onClick","map","member","index","totalTasksAssigned","totalTasksCompleted","isActive","onSubmit","type","value","onChange","target"],"sources":["C:/Users/user/Desktop/My Files/MY PROJECTS/finals-blockchain/src/ContractTeamManagement.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  addTeamMember,\n  assignTask,\n  completeTask,\n  deactivateTeamMember,\n  releasePayment,\n  getTeamMembers,\n  // withdrawBalance,\n  contractTeamManagement,\n} from \"./util/interact.js\";\n\nconst ContractTeamManagement = () => {\n  const [connectedAddress, setConnectedAddress] = useState(null);\n  const [walletAddress, setWalletAddress] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [taskDescription, setTaskDescription] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [teamMembers, setTeamMembers] = useState([]);\n  const [notification, setNotification] = useState(null);\n  const [teamMemberAddress, setTeamMemberAddress] = useState(\"\");\n\n\n   // Function to handle adding a team member\n   const handleAddTeamMember = async (e) => {\n    e.preventDefault();\n    try {\n      await addTeamMember(walletAddress, name);\n      setNotification(\"Team member added successfully\");\n    } catch (error) {\n      if (error.message.includes(\"already a member\")) {\n        setNotification(\"Address is already a member\");\n      } else {\n        setNotification(\"Team member unsuccesfully added\");\n      }\n    }\n  };\n\n  // Function to handle assigning a task\n  const handleAssignTask = async (e) => {\n    e.preventDefault();\n    if (!teamMemberAddress || !taskDescription) {\n        setNotification(\"Please enter both the team member address and task description.\");\n        return;\n    }\n    const success = await assignTask(teamMemberAddress, taskDescription);\n    if (success) {\n        setNotification(\"Task assigned successfully\");\n    } else {\n        setNotification(\"Failed to assign task. Please try again.\");\n    }\n};\n\n\n  // Function to handle completing a task\n  const handleCompleteTask = async (e) => {\n    e.preventDefault();\n    if (!teamMemberAddress) {\n        setNotification(\"Please enter the team member address.\");\n        return;\n    }\n    const success = await completeTask(teamMemberAddress);\n    if (success) {\n        setNotification(\"Task completed successfully\");\n    } else {\n        setNotification(\"Failed to complete task. Please try again.\");\n    }\n};\n\n\n  // Function to handle deactivating a team member\n  const handleDeactivateTeamMember = async (e) => {\n    e.preventDefault();\n    try {\n      await deactivateTeamMember(teamMemberAddress);\n      setNotification(\"Team member deactivated successfully\");\n      // Update the team members list after deactivation\n      fetchTeamMember();\n    } catch (error) {\n      console.error(\"Error deactivating team member:\", error);\n      setNotification(\"Error deactivating team member\");\n    }\n  };\n\n  // Function to handle releasing payment\n  const handleReleasePayment = async (e) => {\n    e.preventDefault();\n    if (!teamMemberAddress || !amount) {\n        setNotification(\"Please enter both team member address and amount.\");\n        return;\n    }\n    const success = await releasePayment(teamMemberAddress, amount);\n    if (success) {\n        setNotification(\"Payment released successfully\");\n    } else {\n        setNotification(\"Failed to release payment. Please try again.\");\n    }\n};\n\n\n  // Function to fetch team members\n  const fetchTeamMember = async (walletAddress) => {\n    try {\n      const teamMember = await contractTeamManagement.methods.teamMembers(walletAddress).call();\n      setTeamMembers(prevMembers => [...prevMembers, teamMember]);\n    } catch (error) {\n      console.error(`Error fetching team member: ${error}`);\n    }\n  };\n  \n\n  // Fetch team members when component mounts\n  useEffect(() => {\n    if (connectedAddress) {\n      fetchTeamMember(connectedAddress);\n    }\n  }, [connectedAddress]);\n\n  // Connecting to MetaMask\n  const connectToMetaMask = async () => {\n    if (typeof window.ethereum !== \"undefined\") {\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        console.log(\"Connected to MetaMask:\", accounts[0]);\n        setConnectedAddress(accounts[0]);\n      } catch (error) {\n        console.error(\"Error connecting to MetaMask:\", error);\n      }\n    } else {\n      console.error(\"MetaMask not detected\");\n    }\n  };\n\n  return (\n    <div className=\"team-management-container\">\n      <h1>Team Management Application</h1>\n      {/* Display notification if available */}\n      {notification && <p>{notification}</p>}\n      {/* <button onClick={handleFetchTeamMembers}>Fetch Team Members</button> */}\n      <div className=\"row\">\n        <div className=\"column\">\n          <button className=\"connect-metamask\" onClick={connectToMetaMask}>\n            Connect to MetaMask\n          </button>\n        </div>\n        <div className=\"column\">\n          {connectedAddress && (\n            <p>Connected Address: {connectedAddress}</p>\n          )}\n        </div>\n      </div>\n      {/* Viewing of Members Address, Name and Task */}\n      <div className=\"row\">\n        <div className=\"column\">\n        <h2>Team Members</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Address</th>\n              <th>Name</th>\n              <th>Total Tasks Assigned</th>\n              <th>Total Tasks Completed</th>\n              <th>Active</th>\n            </tr>\n          </thead>\n          <tbody>\n            {teamMembers.map((member, index) => (\n              <tr key={index}>\n                <td>{member.walletAddress}</td>\n                <td>{member.name}</td>\n                <td>{member.totalTasksAssigned}</td>\n                <td>{member.totalTasksCompleted}</td>\n                <td>{member.isActive ? \"ðŸŸ¢\" : \"ðŸ”´\"}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        </div>\n        {/* Adding New Team Member */}\n        <div className=\"column\">\n          <h2>Add Team Member</h2>\n          <form onSubmit={handleAddTeamMember}>\n            <label>\n              Wallet Address:\n              <input\n                type=\"text\"\n                name=\"walletAddress\"\n                value={walletAddress}\n                onChange={(e) => setWalletAddress(e.target.value)}\n              />\n            </label>\n            <br />\n            <label>\n              Name:\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </label>\n            <br />\n            <button type=\"submit\">Add Team Member</button>\n          </form>\n        </div>\n        {/* Assigning Task to a Team Member */}\n        <div className=\"column\">\n          <h2>Assign Task</h2>\n          <form onSubmit={handleAssignTask}>\n              <label>\n                  Team Member Address:\n                  <input type=\"text\" value={teamMemberAddress} onChange={(e) => setTeamMemberAddress(e.target.value)} />\n              </label>\n              <br />\n              <label>\n                  Task Description:\n                  <input type=\"text\" value={taskDescription} onChange={(e) => setTaskDescription(e.target.value)} />\n              </label>\n              <br />\n              <button type=\"submit\">Assign Task</button>\n          </form>\n        </div>\n        {/* Task Completion */}\n        <div className=\"column\">\n          <h2>Complete Task</h2>\n          <form onSubmit={handleCompleteTask}>\n            <label>\n                Team Member Address:\n                <input type=\"text\" value={teamMemberAddress} onChange={(e) => setTeamMemberAddress(e.target.value)} />\n            </label>\n            <br />\n            <button type=\"submit\">Complete Task</button>\n          </form>\n        </div>\n      </div>\n      <div className=\"row\">\n        {/* Deactivating Team Member */}\n        <div className=\"column\">\n        <h2>Deactivate Team Member</h2>\n        <form onSubmit={handleDeactivateTeamMember}>\n          <label>\n            Team Member Address:\n            <input\n              type=\"text\"\n              name=\"teamMember\"\n              value={teamMemberAddress}\n              onChange={(e) => setTeamMemberAddress(e.target.value)}\n            />\n          </label>\n          <br />\n          <button type=\"submit\">Deactivate Team Member</button>\n        </form>\n      </div>\n        {/* Releasing Payment */}\n        <div className=\"column\">\n          <h2>Release Payment</h2>\n          <form onSubmit={handleReleasePayment}>\n            <label>\n                Team Member Address:\n                <input type=\"text\" value={teamMemberAddress} onChange={(e) => setTeamMemberAddress(e.target.value)} />\n            </label>\n            <br />\n            <label>\n                Amount:\n                <input type=\"text\" value={amount} onChange={(e) => setAmount(e.target.value)} />\n            </label>\n            <br />\n            <button type=\"submit\">Release Payment</button>\n        </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContractTeamManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}