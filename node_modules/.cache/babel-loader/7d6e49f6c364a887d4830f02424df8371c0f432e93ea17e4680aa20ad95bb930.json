{"ast":null,"code":"const alchemyKey=\"wss://eth-sepolia.g.alchemy.com/v2/FI-974hdofERGqCnrGu-doHGCuP1LqHt\";const{createAlchemyWeb3}=require(\"@alch/alchemy-web3\");const web3=createAlchemyWeb3(alchemyKey);const contractABI=require('../contract-abi.json');const contractAddress='0x8CFeBC7dF90808DFed7258CDD244B1fF56f33eF7';export const contractTeamManagement=new web3.eth.Contract(contractABI,contractAddress);export async function addTeamMember(walletAddress,name){try{const accounts=await web3.eth.getAccounts();const userAddress=accounts[0];const contract=new web3.eth.Contract(contractABI,contractAddress);await contract.methods.addTeamMember(walletAddress,name).send({from:userAddress});// Check if the TaskAssigned event is emitted\ncontract.events.TaskAssigned({filter:{teamMember:walletAddress}},(error,event)=>{if(!error){console.log(\"Team member added successfully\");}else{console.error(\"Error adding team member:\",error);}});}catch(error){console.error(\"Error adding team member:\",error);}}export async function assignTask(teamMember,taskDescription){try{const accounts=await web3.eth.getAccounts();const userAddress=accounts[0];await contractTeamManagement.methods.assignTask(teamMember,taskDescription).send({from:userAddress});console.log(\"Task assigned successfully\");return true;}catch(error){console.error(\"Error assigning task:\",error);return false;}}export async function completeTask(teamMember){try{const accounts=await web3.eth.getAccounts();const userAddress=accounts[0];await contractTeamManagement.methods.completeTask(teamMember).send({from:userAddress});console.log(\"Task completed successfully\");return true;}catch(error){console.error(\"Error completing task:\",error);return false;}}export async function deactivateTeamMember(teamMember){try{// Get the current user's account address from MetaMask\nconst accounts=await web3.eth.getAccounts();const userAddress=accounts[0];// Call the deactivateTeamMember function of the contract\nawait contractTeamManagement.methods.deactivateTeamMember(teamMember).send({from:userAddress});console.log(\"Team member deactivated successfully\");return true;}catch(error){console.error(\"Error deactivating team member:\",error);return false;}}export async function releasePayment(teamMember,amount){try{const accounts=await web3.eth.getAccounts();const userAddress=accounts[0];await contractTeamManagement.methods.releasePayment(teamMember,amount).send({from:userAddress});console.log(\"Payment released successfully\");return true;}catch(error){console.error(\"Error releasing payment:\",error);return false;}}// Function to get a team member's details\nasync function getTeamMembers(walletAddress){try{const teamMember=await contractTeamManagement.methods.teamMembers(walletAddress).call();console.log(\"Wallet Address: \".concat(teamMember.walletAddress));console.log(\"Name: \".concat(teamMember.name));console.log(\"Total Tasks Assigned: \".concat(teamMember.totalTasksAssigned));console.log(\"Total Tasks Completed: \".concat(teamMember.totalTasksCompleted));console.log(\"Is Active: \".concat(teamMember.isActive));}catch(error){console.error(\"Error fetching team member: \".concat(error));}}// Usage\ngetTeamMembers('0x1ca266b1F1bdBD94Cd980BCF611D6dD93BCc5B7f');export async function withdrawBalance(){// Implement withdrawBalance function here\n}","map":{"version":3,"names":["alchemyKey","createAlchemyWeb3","require","web3","contractABI","contractAddress","contractTeamManagement","eth","Contract","addTeamMember","walletAddress","name","accounts","getAccounts","userAddress","contract","methods","send","from","events","TaskAssigned","filter","teamMember","error","event","console","log","assignTask","taskDescription","completeTask","deactivateTeamMember","releasePayment","amount","getTeamMembers","teamMembers","call","concat","totalTasksAssigned","totalTasksCompleted","isActive","withdrawBalance"],"sources":["C:/Users/user/Desktop/My Files/MY PROJECTS/finals-blockchain/src/util/interact.js"],"sourcesContent":["const alchemyKey = \"wss://eth-sepolia.g.alchemy.com/v2/FI-974hdofERGqCnrGu-doHGCuP1LqHt\";\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\nconst web3 = createAlchemyWeb3(alchemyKey);\nconst contractABI = require('../contract-abi.json');\nconst contractAddress = '0x8CFeBC7dF90808DFed7258CDD244B1fF56f33eF7';\n\n\nexport const contractTeamManagement = new web3.eth.Contract(\n    contractABI,\n    contractAddress\n);\n\nexport async function addTeamMember(walletAddress, name) {\n  try {\n      const accounts = await web3.eth.getAccounts();\n      const userAddress = accounts[0];\n      const contract = new web3.eth.Contract(contractABI, contractAddress);\n      await contract.methods.addTeamMember(walletAddress, name).send({ from: userAddress });\n\n      // Check if the TaskAssigned event is emitted\n      contract.events.TaskAssigned({ filter: { teamMember: walletAddress } }, (error, event) => {\n          if (!error) {\n              console.log(\"Team member added successfully\");\n          } else {\n              console.error(\"Error adding team member:\", error);\n          }\n      });\n  } catch (error) {\n      console.error(\"Error adding team member:\", error);\n  }\n}\n\n\n\nexport async function assignTask(teamMember, taskDescription) {\n  try {\n      const accounts = await web3.eth.getAccounts();\n      const userAddress = accounts[0];\n      await contractTeamManagement.methods.assignTask(teamMember, taskDescription).send({ from: userAddress });\n      console.log(\"Task assigned successfully\");\n      return true;\n  } catch (error) {\n      console.error(\"Error assigning task:\", error);\n      return false;\n  }\n}\n\n\nexport async function completeTask(teamMember) {\n  try {\n      const accounts = await web3.eth.getAccounts();\n      const userAddress = accounts[0];\n      await contractTeamManagement.methods.completeTask(teamMember).send({ from: userAddress });\n      console.log(\"Task completed successfully\");\n      return true;\n  } catch (error) {\n      console.error(\"Error completing task:\", error);\n      return false;\n  }\n}\n\n\nexport async function deactivateTeamMember(teamMember) {\n  try {\n      // Get the current user's account address from MetaMask\n      const accounts = await web3.eth.getAccounts();\n      const userAddress = accounts[0];\n\n      // Call the deactivateTeamMember function of the contract\n      await contractTeamManagement.methods.deactivateTeamMember(teamMember).send({ from: userAddress });\n\n      console.log(\"Team member deactivated successfully\");\n      return true;\n  } catch (error) {\n      console.error(\"Error deactivating team member:\", error);\n      return false;\n  }\n}\n\nexport async function releasePayment(teamMember, amount) {\n  try {\n      const accounts = await web3.eth.getAccounts();\n      const userAddress = accounts[0];\n      await contractTeamManagement.methods.releasePayment(teamMember, amount).send({ from: userAddress });\n      console.log(\"Payment released successfully\");\n      return true;\n  } catch (error) {\n      console.error(\"Error releasing payment:\", error);\n      return false;\n  }\n}\n\n// Function to get a team member's details\nasync function getTeamMembers(walletAddress) {\n    try {\n        const teamMember = await contractTeamManagement.methods.teamMembers(walletAddress).call();\n        console.log(`Wallet Address: ${teamMember.walletAddress}`);\n        console.log(`Name: ${teamMember.name}`);\n        console.log(`Total Tasks Assigned: ${teamMember.totalTasksAssigned}`);\n        console.log(`Total Tasks Completed: ${teamMember.totalTasksCompleted}`);\n        console.log(`Is Active: ${teamMember.isActive}`);\n    } catch (error) {\n        console.error(`Error fetching team member: ${error}`);\n    }\n}\n\n// Usage\ngetTeamMembers('0x1ca266b1F1bdBD94Cd980BCF611D6dD93BCc5B7f');\n\n\n\n\n\nexport async function withdrawBalance() {\n    // Implement withdrawBalance function here\n}\n"],"mappings":"AAAA,KAAM,CAAAA,UAAU,CAAG,qEAAqE,CACxF,KAAM,CAAEC,iBAAkB,CAAC,CAAGC,OAAO,CAAC,oBAAoB,CAAC,CAC3D,KAAM,CAAAC,IAAI,CAAGF,iBAAiB,CAACD,UAAU,CAAC,CAC1C,KAAM,CAAAI,WAAW,CAAGF,OAAO,CAAC,sBAAsB,CAAC,CACnD,KAAM,CAAAG,eAAe,CAAG,4CAA4C,CAGpE,MAAO,MAAM,CAAAC,sBAAsB,CAAG,GAAI,CAAAH,IAAI,CAACI,GAAG,CAACC,QAAQ,CACvDJ,WAAW,CACXC,eACJ,CAAC,CAED,MAAO,eAAe,CAAAI,aAAaA,CAACC,aAAa,CAAEC,IAAI,CAAE,CACvD,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAT,IAAI,CAACI,GAAG,CAACM,WAAW,CAAC,CAAC,CAC7C,KAAM,CAAAC,WAAW,CAAGF,QAAQ,CAAC,CAAC,CAAC,CAC/B,KAAM,CAAAG,QAAQ,CAAG,GAAI,CAAAZ,IAAI,CAACI,GAAG,CAACC,QAAQ,CAACJ,WAAW,CAAEC,eAAe,CAAC,CACpE,KAAM,CAAAU,QAAQ,CAACC,OAAO,CAACP,aAAa,CAACC,aAAa,CAAEC,IAAI,CAAC,CAACM,IAAI,CAAC,CAAEC,IAAI,CAAEJ,WAAY,CAAC,CAAC,CAErF;AACAC,QAAQ,CAACI,MAAM,CAACC,YAAY,CAAC,CAAEC,MAAM,CAAE,CAAEC,UAAU,CAAEZ,aAAc,CAAE,CAAC,CAAE,CAACa,KAAK,CAAEC,KAAK,GAAK,CACtF,GAAI,CAACD,KAAK,CAAE,CACRE,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC,CACjD,CAAC,IAAM,CACHD,OAAO,CAACF,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACrD,CACJ,CAAC,CAAC,CACN,CAAE,MAAOA,KAAK,CAAE,CACZE,OAAO,CAACF,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACrD,CACF,CAIA,MAAO,eAAe,CAAAI,UAAUA,CAACL,UAAU,CAAEM,eAAe,CAAE,CAC5D,GAAI,CACA,KAAM,CAAAhB,QAAQ,CAAG,KAAM,CAAAT,IAAI,CAACI,GAAG,CAACM,WAAW,CAAC,CAAC,CAC7C,KAAM,CAAAC,WAAW,CAAGF,QAAQ,CAAC,CAAC,CAAC,CAC/B,KAAM,CAAAN,sBAAsB,CAACU,OAAO,CAACW,UAAU,CAACL,UAAU,CAAEM,eAAe,CAAC,CAACX,IAAI,CAAC,CAAEC,IAAI,CAAEJ,WAAY,CAAC,CAAC,CACxGW,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC,CACzC,MAAO,KAAI,CACf,CAAE,MAAOH,KAAK,CAAE,CACZE,OAAO,CAACF,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC7C,MAAO,MAAK,CAChB,CACF,CAGA,MAAO,eAAe,CAAAM,YAAYA,CAACP,UAAU,CAAE,CAC7C,GAAI,CACA,KAAM,CAAAV,QAAQ,CAAG,KAAM,CAAAT,IAAI,CAACI,GAAG,CAACM,WAAW,CAAC,CAAC,CAC7C,KAAM,CAAAC,WAAW,CAAGF,QAAQ,CAAC,CAAC,CAAC,CAC/B,KAAM,CAAAN,sBAAsB,CAACU,OAAO,CAACa,YAAY,CAACP,UAAU,CAAC,CAACL,IAAI,CAAC,CAAEC,IAAI,CAAEJ,WAAY,CAAC,CAAC,CACzFW,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC,CAC1C,MAAO,KAAI,CACf,CAAE,MAAOH,KAAK,CAAE,CACZE,OAAO,CAACF,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9C,MAAO,MAAK,CAChB,CACF,CAGA,MAAO,eAAe,CAAAO,oBAAoBA,CAACR,UAAU,CAAE,CACrD,GAAI,CACA;AACA,KAAM,CAAAV,QAAQ,CAAG,KAAM,CAAAT,IAAI,CAACI,GAAG,CAACM,WAAW,CAAC,CAAC,CAC7C,KAAM,CAAAC,WAAW,CAAGF,QAAQ,CAAC,CAAC,CAAC,CAE/B;AACA,KAAM,CAAAN,sBAAsB,CAACU,OAAO,CAACc,oBAAoB,CAACR,UAAU,CAAC,CAACL,IAAI,CAAC,CAAEC,IAAI,CAAEJ,WAAY,CAAC,CAAC,CAEjGW,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC,CACnD,MAAO,KAAI,CACf,CAAE,MAAOH,KAAK,CAAE,CACZE,OAAO,CAACF,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CACvD,MAAO,MAAK,CAChB,CACF,CAEA,MAAO,eAAe,CAAAQ,cAAcA,CAACT,UAAU,CAAEU,MAAM,CAAE,CACvD,GAAI,CACA,KAAM,CAAApB,QAAQ,CAAG,KAAM,CAAAT,IAAI,CAACI,GAAG,CAACM,WAAW,CAAC,CAAC,CAC7C,KAAM,CAAAC,WAAW,CAAGF,QAAQ,CAAC,CAAC,CAAC,CAC/B,KAAM,CAAAN,sBAAsB,CAACU,OAAO,CAACe,cAAc,CAACT,UAAU,CAAEU,MAAM,CAAC,CAACf,IAAI,CAAC,CAAEC,IAAI,CAAEJ,WAAY,CAAC,CAAC,CACnGW,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC,CAC5C,MAAO,KAAI,CACf,CAAE,MAAOH,KAAK,CAAE,CACZE,OAAO,CAACF,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD,MAAO,MAAK,CAChB,CACF,CAEA;AACA,cAAe,CAAAU,cAAcA,CAACvB,aAAa,CAAE,CACzC,GAAI,CACA,KAAM,CAAAY,UAAU,CAAG,KAAM,CAAAhB,sBAAsB,CAACU,OAAO,CAACkB,WAAW,CAACxB,aAAa,CAAC,CAACyB,IAAI,CAAC,CAAC,CACzFV,OAAO,CAACC,GAAG,oBAAAU,MAAA,CAAoBd,UAAU,CAACZ,aAAa,CAAE,CAAC,CAC1De,OAAO,CAACC,GAAG,UAAAU,MAAA,CAAUd,UAAU,CAACX,IAAI,CAAE,CAAC,CACvCc,OAAO,CAACC,GAAG,0BAAAU,MAAA,CAA0Bd,UAAU,CAACe,kBAAkB,CAAE,CAAC,CACrEZ,OAAO,CAACC,GAAG,2BAAAU,MAAA,CAA2Bd,UAAU,CAACgB,mBAAmB,CAAE,CAAC,CACvEb,OAAO,CAACC,GAAG,eAAAU,MAAA,CAAed,UAAU,CAACiB,QAAQ,CAAE,CAAC,CACpD,CAAE,MAAOhB,KAAK,CAAE,CACZE,OAAO,CAACF,KAAK,gCAAAa,MAAA,CAAgCb,KAAK,CAAE,CAAC,CACzD,CACJ,CAEA;AACAU,cAAc,CAAC,4CAA4C,CAAC,CAM5D,MAAO,eAAe,CAAAO,eAAeA,CAAA,CAAG,CACpC;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}