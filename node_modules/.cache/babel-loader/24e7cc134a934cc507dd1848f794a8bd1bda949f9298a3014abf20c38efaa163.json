{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getProvider = exports.fetchFromProvider = void 0;\nconst micro_ftch_1 = require(\"micro-ftch\");\nconst fetchFromProvider = async (url, params) => {\n  const res = await (0, micro_ftch_1.default)(url, {\n    headers: {\n      'content-type': 'application/json'\n    },\n    type: 'json',\n    data: {\n      method: params.method,\n      params: params.params,\n      jsonrpc: '2.0',\n      id: 1\n    }\n  });\n  return res.result;\n};\nexports.fetchFromProvider = fetchFromProvider;\nconst getProvider = provider => {\n  var _provider$connection;\n  if (typeof provider === 'string') {\n    return provider;\n  } else if ((provider === null || provider === void 0 || (_provider$connection = provider.connection) === null || _provider$connection === void 0 ? void 0 : _provider$connection.url) !== undefined) {\n    return provider.connection.url;\n  } else {\n    throw new Error('Must provide valid provider URL or Web3Provider');\n  }\n};\nexports.getProvider = getProvider;","map":{"version":3,"names":["micro_ftch_1","require","fetchFromProvider","url","params","res","default","headers","type","data","method","jsonrpc","id","result","exports","getProvider","provider","_provider$connection","connection","undefined","Error"],"sources":["C:\\Users\\user\\Desktop\\My Files\\MY PROJECTS\\finals-blockchain\\node_modules\\@ethereumjs\\util\\src\\provider.ts"],"sourcesContent":["import fetch from 'micro-ftch'\n\ntype rpcParams = {\n  method: string\n  params: (string | boolean | number)[]\n}\nexport const fetchFromProvider = async (url: string, params: rpcParams) => {\n  const res = await fetch(url, {\n    headers: {\n      'content-type': 'application/json',\n    },\n    type: 'json',\n    data: {\n      method: params.method,\n      params: params.params,\n      jsonrpc: '2.0',\n      id: 1,\n    },\n  })\n\n  return res.result\n}\n\nexport const getProvider = (provider: string | any) => {\n  if (typeof provider === 'string') {\n    return provider\n  } else if (provider?.connection?.url !== undefined) {\n    return provider.connection.url\n  } else {\n    throw new Error('Must provide valid provider URL or Web3Provider')\n  }\n}\n"],"mappings":";;;;;;AAAA,MAAAA,YAAA,GAAAC,OAAA;AAMO,MAAMC,iBAAiB,GAAG,MAAAA,CAAOC,GAAW,EAAEC,MAAiB,KAAI;EACxE,MAAMC,GAAG,GAAG,MAAM,IAAAL,YAAA,CAAAM,OAAK,EAACH,GAAG,EAAE;IAC3BI,OAAO,EAAE;MACP,cAAc,EAAE;KACjB;IACDC,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE;MACJC,MAAM,EAAEN,MAAM,CAACM,MAAM;MACrBN,MAAM,EAAEA,MAAM,CAACA,MAAM;MACrBO,OAAO,EAAE,KAAK;MACdC,EAAE,EAAE;;GAEP,CAAC;EAEF,OAAOP,GAAG,CAACQ,MAAM;AACnB,CAAC;AAfYC,OAAA,CAAAZ,iBAAiB,GAAAA,iBAAA;AAiBvB,MAAMa,WAAW,GAAIC,QAAsB,IAAI;EAAA,IAAAC,oBAAA;EACpD,IAAI,OAAOD,QAAQ,KAAK,QAAQ,EAAE;IAChC,OAAOA,QAAQ;GAChB,MAAM,IAAI,CAAAA,QAAQ,aAARA,QAAQ,gBAAAC,oBAAA,GAARD,QAAQ,CAAEE,UAAU,cAAAD,oBAAA,uBAApBA,oBAAA,CAAsBd,GAAG,MAAKgB,SAAS,EAAE;IAClD,OAAOH,QAAQ,CAACE,UAAU,CAACf,GAAG;GAC/B,MAAM;IACL,MAAM,IAAIiB,KAAK,CAAC,iDAAiD,CAAC;;AAEtE,CAAC;AARYN,OAAA,CAAAC,WAAW,GAAAA,WAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}